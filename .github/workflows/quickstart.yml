name: Rust Build and Android Build

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      RUST_BACKTRACE: 1

    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends \
            pkg-config \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-xfixes0-dev \
            libx11-dev \
            libasound2-dev \
            libudev-dev \
            libglib2.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            libatk1.0-dev \
            libgdk-pixbuf2.0-dev \
            libgtk-3-dev
        if: runner.os == 'linux'

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Rust components
        run: rustup component add clippy rustfmt
          
      - name: Build & run tests
        run: |
          cargo fmt --all -- --check
          cargo clippy --all -- -Dwarnings
          cargo test --all --

      - name: Set up Android NDK (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y wget unzip
          wget https://dl.google.com/android/repository/android-ndk-r23b-linux-x86_64.zip
          unzip android-ndk-r23b-linux-x86_64.zip
          export ANDROID_NDK_HOME=$(pwd)/android-ndk-r23b
          echo "ANDROID_NDK_HOME=$(pwd)/android-ndk-r23b" >> $GITHUB_ENV

      - name: Build for Android
        if: runner.os == 'Linux'
        run: |
          rustup target add aarch64-linux-android
          cargo build --target aarch64-linux-android --release
